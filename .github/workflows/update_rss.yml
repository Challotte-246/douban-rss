name: Update Douban RSS

on:
  schedule:
    - cron: "0 */4 * * *"  # 每4小时更新一次
  workflow_dispatch:        # 支持手动触发

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      
    steps:
    # 步骤1: 检出代码
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        # 解决Git安全目录问题
        safe-directory: /home/runner/work/douban-rss/douban-rss
    
    # 步骤2: 设置Python环境
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.10"
        # 添加缓存清理
        cache: 'pip'
        cache-dependency-path: '**/requirements.txt'
    
    # 步骤3: 安装依赖包（修复此处）
    - name: Install dependencies
      run: |
        # 清除pip缓存防止旧包影响
        python -m pip cache purge
        
        # 升级pip并安装依赖
        python -m pip install --upgrade pip
        pip install beautifulsoup4 feedgenerator requests --no-cache-dir
        
        # 验证安装
        pip list | grep -E "beautifulsoup4|feedgenerator|requests"
    
    # 步骤4: 添加随机延迟
    - name: Add random delay
      run: |
        DELAY=$(($RANDOM % 30 + 10))
        echo "等待 ${DELAY} 秒..."
        sleep $DELAY
    
    # 步骤5: 运行抓取脚本
    - name: Run scraper
      run: python douban_rss.py
    
    # 步骤6: 提交生成的RSS文件
    - name: Commit RSS file
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # 配置Git用户信息
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git config --global --add safe.directory /home/runner/work/douban-rss/douban-rss
        
        # 检查是否有文件变化
        if [ -n "$(git status --porcelain)" ]; then
          git add douban_*.xml
          git commit -m "自动更新 RSS [$(date +'%Y-%m-%d %H:%M')]"
          git push origin HEAD:main
          echo "✅ 已提交并推送更改"
        else
          echo "🟢 没有变化，跳过提交"
        fi
